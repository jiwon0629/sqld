11. 다음 중 서브쿼리(SUBQUERY)에 대한 설명으로 올바르지 않은 것은?
1. 서브쿼리에는 ORDER BY구를 사용할 수 없다.
2. 서브쿼리에서 여러 개의 행이 반환되면 IN, ANY, ALL과 같은 다중행 서브쿼리 함수를 사용해야 한다.
3. FROM구에 사용되면 인라인 뷰이고 WHERE절에 사용되면 서브쿼리이다.
4. 서브쿼리에서 메인쿼리의 컬럼을 사용할 수 있고 메인쿼리에서도 서브쿼리의 컬럼을 사용할 수 있다.
답 : 4번
해설) 서브쿼리는 메인쿼리의 컬럼을 모두 사용할 수 있지만, 메인쿼리는
서브쿼리의 컬럼을 사용할 수 없으므로 스칼라 서브쿼리 등을 사용해야 한다.

12. 다음 중 Mytest테이블에서 주어진 결과를 반환하는 SQL문으로 올바른 것은?
Mytest테이블 DNAME[빅데이터팀, 빅데이터팀, 빅데이터팀, 인프라운영팀, 인프라운영팀, 인프라운영팀], 
YEAR[2010, 2011, 2012, 2010, 2011, 2012], 
SAL[1000, 2000, 3000, 1000, 2000, 3000]
결과
DNAME[빅데이터팀, 빅데이터팀, 빅데이터팀, 빅데이터팀, 인프라운영팀, 인프라운영팀, 인프라운영팀, 인프라운영팀,___], 
YEAR[2010, 2011, 2012, ___, 2010, 2011, 2012, ___, ___], 
SUM(SAL)[1000, 2000, 3000, 6000, 1000, 2000, 3000, 6000, 12000]
1. SELECT DNAME, YEAR, SUM(SAL) FROM Mytest GROUP BY ROLLUP((DNAME, DNAME), NULL);
2. SELECT DNAME, YEAR, SUM(SAL) FROM Mytest GROUP BY ROLLUP(DNAME, (DNAME, YEAR));
3. SELECT DNAME, YEAR, SUM(SAL) FROM Mytest GROUP BY ROLLUP((DNAME, YEAR));
4. SELECT DNAME, YEAR, SUM(SAL) FROM Mytest GROUP BY ROLLUP(DNAME, YEAR, (DNAME, YEAR));
답 : 2번

13. 다음 SQL문의 실행 결과로 올바른 것은?
1. SELECT FLOOR(35.8) FROM DUAL -> 36
2. SELECT CEIL(35.8) FROM DUAL -> 36
3. SELECT ROUND(36.8, 0) FROM DUAL -> 36
4. SELECT TRUNC(35.8) FROM DUAL -> 36
답 : 2번
해설) CEIL은 올림함수 35.8보다 크거나 같은 최소의 정수를 되돌려 주기 때문에 36
FLOOR은 내림함수이기 때문에 35
TRUNC는 소수점을 버리기 때문에 35

14. 다음 중 SQL문의 실행 순서로 올바른 것은?
1. FROM -> WHERE -> GROUP BY -> HAVING -> ORDER BY -> SELECT
2. FROM -> WHERE -> GROUP BY -> HAVING ->  SELECT -> ORDER BY
3. FROM -> WHERE -> HAVING -> GROUP BY -> ORDER BY -> SELECT
4. FROM -> WHERE -> GROUP BY -> SELECT -> HAVING -> ORDER BY
답 : 2번
해설) SELECT문은 FROM, WHERE, GROUP BY, HAVING, SELECT, ORDER BY 순으로 실행된다.

15. 다음 중 ORACLE과 SQL SERVER의 트랜잭션 처리 방식에 대한 설명으로 올바르지 않은 것은?
1. SQL의 DML과 DDL을 실행할 때 COMMIT을 자동으로 처리하는 것이 AUTO COMMIT이다.
2. 명시적 트랜잭션의 시작과 끝은 모두 SQL을 실행하는 사용자가 지정한다.
3. 암시적(묵시적) 트랜잭션 처리는 트랜잭션이 자동으로 시작되며 자동으로 완료 혹은 취소되는 것이다.
4. ORACLE에서 INSERT를 실행하면 자동적으로 COMMIT까지 완료된다.
답 : 4번
해설) 오라클에서 기본적으로 AUTO COMMIT은 설정되지 않는다. SQL SERVER는 기본 설정이 AUTO COMMIT이다.

16. 범위에 벗어나는 문제여서 제외.

17. PL/SQL에서 FETCH 이후에 수행해야 하는 것은?
1. CURSOR DEFINE
2. CURSOR EXPTION
3. CURSOR CLOSE
4. EXIT
답 : 3번
해설) PL/SQL의 사용 순서는 CURSOR 선언, CURSOR OPEN, FETCH, CURSOR CLOSE이다.
PL/SQL에서 선언구는 다음과 같다.
커서의 선언구
DECLARE CURSOR <커서명> IS SELECT <컬럼명> FROM <테이블명>;
커서가 선언되면 OPEN 문을 사용해서 해당 커서를 열어야 사용이 가능하다.
커서의 열기
OPEN <커서명>;
커서가 열려지면 FETCH 문을 사용해서 데이터를 읽어 올 수 있다.
커서의 인출
FETCH <커서명> INTO 변수1, 변수2...;
마지막으로 인출이 종료되면 사용된 커서는 반드시 닫아야 한다.
커서의 닫기
CLOSE <커서명> ;

18. SQL SERVER에 구축된 TEAMSCORE 테이블에서 WINCNT가 가장 높으 4위까지 조회한다.
단, WINCNT에 동일한 순위 팀이 있으면 같이 조회하는 SQL문으로 올바른 것은?
TEAMNAME[ A, B, C, D, E, F, G], WINCNT[124, 20, 12, 102, 110, 100, 71], FAILCNT[90, 11, 21, 100, 111, 200, 30]
1. SELECT TOP(4) TEAMNAME WINCNT
FROM TEAMSCORE ORDERBY WINCNT ASC;
2. SELECT TOP(4) TEAMNAEM, WINCNT
FROM TEAMSCORE;
3. SELECT TEAMNAME WINCNT
FROM TEAMSCORE
WHERE ROWNUM <= 4
ORDER BY WINCNT DESC;
4. SELECT TOP(4) WITH TIES TEAMNAME, WINCNT
FROM TEAMSCORE ORDER BY WINCNT DESC.
답 : 4번
해설) 3번의 ROWNUM은 ORACLE데이터베이스에서 사욛하는 것이고
SQL SERVER는 TOP구를 사용한다. TOP구에 WITH TIES를 같이 
사용하면 동일한 데이터가 있을 때 함께 조회된다.

19. 다음 중 LIKE문에서 세 번째 문자가 'K'인 문자열을 
조회하는 것으로 가장 올바른 것은?
1. SELECT * FROM EMP WHERE LIKE 'K%'
2. SELECT * FROM EMP WHERE LIKE '%K%'
3. SELECT * FROM EMP WHERE LIKE '[__K]%'
4. SELECT * FROM EMP WHERE LIKE '__K%'
답 : 4번
해설)
1. K로 시작하는 문자열
2. K 문자가 포함된 모든 문자열
3. 첫 번째 문자가 _또는 K인 모든 문자열을 검색하는 조건이다.
단, 이 방식은 SQL SERVER 방식이며, ORACLE에서는 REGEXP LIKE 정규식을 활용할 수 있다.
ORACLE은 [ ] 대괄호는 그저 문자 그대로임

20. 범위에 벗어나는 문제여서 제외.



