데이터베이스 모델링 관점 중에서 CRUD 매트릭스는 데이터와 프로세스 상관 관점

고객 엔터티에 고객 ID, 이름, 주소가 있다. 이때 주소는 어떤 속성인가?
답) 복합속성
해설)
단일 속성 : 하나의 의미로 구성된 것으로 회원 ID, 이름 등이다.
복합 속성 : 여러개의 의미가 있는 것으로 대표적으로 주소가 있다. 주소는 시, 군, 동 등으로 분해될 수 있다.
다중값 속성 : 속성에 여러 개의 값을 가질 수 있는 것으로 예를 들어 상품리스트가 있다. 다중값 속성은 엔터티로 분해된다.
속성의 분류(특성에 따른 분류)
기본 : 업무로부터 추출한 속성으로 제일 많이 발생
설계 : 설계시 규칙화 등이 필요해 만든 속성 코드성이나 일련번호 등
파생 : 다른 속성들로부터 계산/변형되어 만들어진 속성

데이터베이스 3층 스키마에 해당 되지 않는 것은?
1. 외부 단계
2. 사용 단계
3. 개념 단계
4. 내부 단계
답 : 2번
해설)
외부 : 여러 사용자 각각의 관점
개념 : 통합적, 조직 전체의 DB관점
내부 : 데이터 물리 저장 구조 표현

다음 중 반정규화를 적용하는 이유로 올바르지 않은 것은?
1. 데이터를 조회할 때 디스크 입출력량이 많아서 성능이 저하되는 경우
2. 여러 개의 테이블 조인으로 인한 성능저하가 예상되는 경우
3. 컬럼의 합계 및 평균 등을 계산하여 읽을 때 성능이 저하될 것이 예상되는 경우
4. 정규화의 함수적 종속 관계는 위반하지 않지만 데이터의 중복성을 감소시켜 데이터 조회의 성능을 향상시켜야 하는 경우
답 : 4번
해설)
반정규화는 데이터를 중복시켜서 데이터베이스 성능을 향상시킨다. 데이터 중복을 감소시키는 것은 정규화이다.
반정규화를 하는 이유는 조회 성능 향상

다음 중 슈퍼타입과 서브타입 변환 방법의 종류에 해당하지 않는 것은?
1. One To One Type
2. Plus Type
3. Single Type
4. Integration Type
답 : 4번
해설)
One To One Type : 슈퍼타입과 서브타입을 개별 테이블로 도출한다. 테이블의 수가 많아서 조인이 많이 발생하고 관리가 어렵다.
Plus Type : 슈퍼타입과 서브타입 테이블로 도출한다. 조인이 발생하고 관리가 어렵다.
Single Type : 슈퍼타입과 서브타입을 하나의 테이블로 도출한다. 조인 성능이 좋고 관리가 편리하지만, 입출력 성능이 나쁘다.
슈퍼/서브 타입 데이터 모델
공통적인 특징을 가지는 것은 슈퍼모델로, 각각의 차이는 서브모델로 표현하는 방식

다음 중 카디널리티를 계산하는 식으로 올바른 것은?
답 : 선택도 * 전체 레코드 수
해설) 
카디널리티는 두 개의 엔터티에서 관계에 참여하는 수이다. 1:1, 1:N, M:N이 있다.

데이터베이스 정규화 중에서 기본키를 제외하고 컬럼 간에 종속성이 발생하면 테이블을 분할하는 것은?
답 : 제 3정규화
해설)
제 3정규화는 이행 함수 종속성 제거로 컬럼 간에 종속성이 발생하면 테이블을 분할한다.

다음 주어진 ERD 관계에 대한 설명으로 옳은 것을 고르시오.
10번 문제

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

11번 ~ 20번

11. 다음에서 설명하는 DDL문으로 올바른 것은? (오라클)
[ Mytset 테이블 컬럼을 데이터 타입 조건으로 not null을 기본으로 수정하시오 ]
1. ALTER table Mytest alter column 컬럼명 not null
2. ALTER table Mytest add column 컬럼명 default not null
3. ALTER table Mytest modify (컬럼명 not null)
4. ALTER table Mytest add constraint column 컬럼명 default not null
답 : 3번
해설) 테이블에 존재하는 컬럼의 데이터 유형, 디폴트 값, NOT NULL에 대한 제약조건을 변경하는 명령어는 ALTER문의 modify이다.
sql일 경우에는 1번이 답이다.
2번은 문법 오류
4번은 add constraint - 제약조건 추가
오라클 : ALTER TABLE 테이블명 MODIFY (컬럼명 바꿀자료형 [default여부] [NULL여부],...);
SQL SERVER : ALTER TABLE 테이블명 ALTER COLUMN 컬럼명 바꿀자료형 [default여부] [NULL여부];

12. 다음 중 DDL 문이 아닌 것은?
1. CREATE TABLE
2. RENAME
3. COMMIT
4. ALTER
답 : 3번
해설) COMMIT과 ROLLBACK문은 TCL(Transaction Control Language)이고 DDL에는 CREATE, ALTER, RENAME, DROP등이 있다.

13. 다음 중 Mytest 테이블에 JOB 컬럼을 추가하는 방법으로 올바른 것을 고르시오. (단, 데이터타입, 제약조건 등은 따로 고려하지 않음)
1. ALTER table Mytest alter add column JOB
2. ALTER table Mytest modify add JOB
3. ALTER table Mytest add JOB
4. ALTER table Mytest add constraint JOB
답 : 3번
해설) 기존 테이블에 필요한 컬럼을 추가하는 명령어는 add이다.

14. 다음 SQL문의 실행 결과로 올바른 것은?
Create table Mytest (COL1 number(10));
INSERT INTO Mytest VALUES(2);
INSERT INTO Mytest VALUES(2);
SAVEPOINT SV1;
UPDATE Mytest SET COL1=7 WHERE COL1=2;
INSERT INTO Mytest VALUES(9);
SAVEPOINT SV2;
DELETE Mytest WHERE COL1=7;
INSERT INTO Mytest VALUES(11);
SAVEPOINT SV3;
INSERT INTO Mytest VALUES(20);
ROLLBACK TO SV2;
COMMIT;
SELECT * FROM mytest;
답 : 7 7 9
만약 ROLLBACK만 있었다면 CREATE문 아래의 내용은 전부 사라지고 TABLE만 남는다.

15. 다음 주어진 CUBE문과 동일한 것은?
[ GROUP BY CUBE(DEPTNO, JOB); ]
1. GROUP BY ROLLUP(DEPTNO, JOB);
2. GROUP BY GROUPING SETS(DEPTNO, JOB, (DEPTNO, JOB), ());
3. GROUP BY DEPTNO UNION GROUP BY JOB UNION GROUPBY (DEPTNO, JOB)
4. GROUP BY (DEPTNO, JOB, (DEPTNO, JOB), ());
답 : 2번
해설)
그룹 함수 중 CUBE는 CUBE 함수의 인자로 전달된 컬럼에 대해서 모든 결합 가능한 집계를 계산한다.
GROUPING SETS 함수는 GROUP BY에 나오는 컬럼의 순서와 관계없이 다양한 소계를 만들 수 있다. 
GROUPING SETS 함수는 GROUP BY에 나오는 컬럼의 순서와 관계없이 개별적으로 모두 처리한다.
그룹함수 : ROLLUP, CUBE(조합이 가능한 모든 경우의 수만큼 집계를 한다), GROUPING SETS
3번 GROUP BY 뒤에 UNION 사용 못 함. 전체집계가 없음.
4번도 문법 오류
GROUP BY에 중복된 것들이 있으면 없애고 하나로만 봐도 된다.
ex) GROUP BY A, B, (A, B), ();  =  GROUP BY A, B, ();

16. 다음 주어진 테이블에 대해서 아래와 같은 SQL문을 수행하였을 때 반환되는 ROW 값의 수는 무엇인가?
select * from A1
union
select * from B1
minus
select * from C1;
[A1]
COL1
1
2
3
4
[B1]
COL1
3
5
[C1]
4
5
답 : 3개
해설)1,2,3,4 에서 UNION하면 1,2,3,4,5 MINUS하면 1,2,3

17. 다음 중 계층형 쿼리에 대한 설명으로 올바르지 않은 것은? 
1. PRIOR 자식 = 부모 형태를 사용하면 계층 구조에서 순방향 전개를 수행한다.
2. 계층형 쿼리는 계층형 형태로 데이터를 질의할 때 사용된다.
3. CONNECT BY는 부모 자식을 설명하는 것이다.
4. CONNECT_BY_ISLEAF에서 해당 데이터가 리프 데이터면1, 그렇지 않으면 0을 반환한다.
답 : 3번
해설) CONNECT BY는 부모 계층형 쿼리에서 부모 노드와 자식 노드 사이의 특정한 관계를 나타내는데 사용된다.
계층형 질의란 동일한 테이블 내에 계층 관계가 있는 컬럼이 존재하고 이를 이용해 계층 관계를 표현하는 질의
CONNECT_BY_ISLEAF - 현재 행이 단말인지 확인(단말이면 1, 아니면 0)
CONNECT_BY_ISCYCLE - 현재 행이 사이클이 있는지 확인(있으면 1, 없으면 0)
계층 질의에서는 FROM 다음 WHERE절이 아니라 계층 전개 먼저 하고 다음에 필터링을 한다.
START WITH 상위메뉴id IS NULL    --- 우리가 어떤 것을 기준으로 계층을 전개할 것인지
CONNECT BY  상위메뉴id = PRIOR 메뉴id    --- 전개를 한 조건. PRIOR가 붙은 쪽이 기준이다(메뉴 ID)
ORDER STBLINGS BY 메뉴 id ;

18. 

19. 다음 중 Mytest 테이블에서 부서코드 400부터 상위 부서를 찾는 SQL문은?
답 : 
SELECT 상위 부서코드
FROM Mytest
WHERE 400 >= 부서 코드

20. 다음 중 계층형 쿼리문의 내장 함수가 아닌 것은 무엇인가?
1. LEVEL
2. TRIM
3. SYS_CONNECT_BY_PATH
4. CONNECT_BY_ROOT
답 : 2번
해설) TRIM은 계층형 쿼리문의 내장 함수가 아니고 문자열 함수이다.
LEVEL : 검색 항목의 깊이를 의미한다. 즉, 계층 구조에서 가장 상위 레벨이 1이 된다.
CONNECT_BY_ROOT : 계층 구조에서 가장 최상위 값을 표시한다.
CONNECT_BY_ISLEAF : 계층 구조에서 가장 최하위를 표시한다.
SYS_CONNECT_BY_PATH : 현재 전개중인 행까지의 경로를 보여줌


