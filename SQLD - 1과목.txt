 1과목  

모델링의 개념
데이터베이스의 구조와 관계를 정의하며, 이를 통해 데이터의 저장, 조작, 관리 방법을 명확하게 정의
 
모델링의 특징
1. 단순화 (Simplification)
 - 현실을 단순화하여 핵심 요소에 집중하고 불필요한 세부 사항을 제거

2. 추상화 (Abstraction)
 - 현실세계를 일정한 형식에 맞추어 간략하게 대략적으로 표현하는 과정

3. 명확화 (Clarity)
 - 대상에 대한 애매모호함을 최대한 제거하고 정확하게 현상을 기술하는 과정

데이터 모델링 유의점
1. 중복 (Duplication)
 - 한 테이블 또는 여러 테이블에 같은 정보를 저장하지 않도록 설계

2. 비유연성 (Inflexibility)
 - 사소한 업무 변화에 대해서도 잦은 모델 변경이 되지 않도록 주의

3. 비일관성 (Inconsistency) 
 - 데이터베이스 내의 정보가 모순되거나 상반된 내용을 갖는 상태를 의미

데이터 모델링 3가지 요소
 - 대상 (Entity) : 업무가 관리하고자 하는 대상(객체)
 - 속성 (Attribute) : 대상들이 갖는 속성(하나의 특징으로 정의될 수 있는 것)
 - 관계 (Relationship) : 대상들 간의 관계

데이터 모델링의 3단계
1. 개념적 모델링
 - (가장 높은 추상화 레벨) 업무와 개념 중심으로 포괄적인 수준에서 모델링 수행
 - 전사적 차원의 데이터 모델링, EA(Enterprise Architecture) 수립에 많이 이용
 - 엔터티(Entity)와 속성(Attribute) 도출
 - 도출된 핵심 엔터티(Entity)들과의 관계들을 표현하기 위해 ERD 작성

2. 논리적 모델링
 - (중간 수준의 추상화 레벨) 데이터 모델이 대한 키(Key), 속성(Attribute), 관계(Relationship) 등 표현
 - 정규화를 통해 중복 데이터를 최소화, 높은 재사용성
 - 식별자 도출 및 관계 정의
 - 개념적 모델링의 결과를 토대로 세부속성, 식별자, 관계 등을 표현하는 관계
 - 데이터 정규화 수행

3. 물리적 모델링
 - (가장 낮은 추상화 레벨) 특정 DBMS에 맞추어 구현이 가능한 수준에서 모델링 수행
 - DBMS의 성능이나 보안, 가용성 등을 고려해 설계
 - 논리적 모델링이 끝나면 이를 직접 물리적으로 생성하는 과정

외부 스키마
 - (사용자 관점) 사용자 또는 애플리케이션이 바라보는 데이터베이스 스키마를 정의
 - 다중 사용자 뷰 제공

개념 스키마
 - (설계자 관점) 모든 사용자가 바라보는 데이터베이스 스키마를 통합하여 나타내며
    전체 데이터베이스에 저장되는 데이터와 그 관계를 정의
 - 통합된 뷰 제공

내부 스키마
 - (개발자 관점) 디스크나 메모리 상의 물리적, 실질적 저장구조를 나타내며
    테이블, 칼럼, 인덱스 등을 정의
 - 물리적 뷰 제공

데이터 모델의 표기법 (ERD : Entity Relationship Diagram)
 - 엔터티(Entity)와 엔터티 간의 관계(Relationship)를 시각적으로 표현한 다이어그램
 - 1976년 피터 첸 (Peter Chen)이 만든 표기법, 데이터 모델링 표준으로 사용

ERD 작성 절차 (6단계)
1. 엔터티를 도출한 후 그린다
2. 엔터티 배치
3. 엔터티 간의 관계를 설정
4. 관계명을 서술
5. 관계의 참여도 기술
6. 관계의 필수 여부를 확인

엔터티(Entity)의 개념
 - 현실 세계에서 독립적으로 식별 가능한 객체나 사물을 나타냄

엔터티(Entity) : 학생
속성(Attribute) : 학번, 이름, 학과 등
식별자(Identifier) : 학번 (고유한 학번으로 각 학생을 식별)
인스턴스 : 특정 학생의 데이터

속성(Attribute)의 개념
업무에서 필요로 하는 고유한 성질, 특징을 의미
더 이상 분리되지 않는 최소의 데이터 단위

속성의 특징
함수적 종속성을 가져야 한다.
하나의 속성은 한 개의 값만을 가진다.
하나의 인스턴스는 속성마다 반드시 하나의 속성값을 가진다

원자성
데이터모델에서 각 엔터티의 인스턴스가 해당 속성에 대해 단일하고 명확한 값을 가지는 것

함수적 종속성
 - 한 속성의 값이 다른 속성의 값에 종속적인 관계를 갖는 특징
 - 어떤 속성 A의 값에 의해 다른 속성 B도 유일하게 결정된다면, B는 A에 함수적으로 종속됐다 하고
   이를 A -> B라고 표현한다.

완전 함수적 종속
 - 특정 컬럼이 기본키에 대해 완전히 종속될 때를 말한다.

부분 함수적 종속
 - 기본키 전체가 아니라, 기본키 일부에 대해 종속될 때를 말한다.

엔터티 분류
PK(Primary Key, 기본키)
 - 인스턴스를 식별할 수 있는 속성

FK(Foreign Key, 외래키)
 - 다른 엔터티와의 관계에서 포함된 속성

일반 속성(구성방식에 따른 분류)
 - 엔터티에 포함되어 있고 PK/FK에 포함되지 않는 속성

도메인(Domain)
 - 각 속성이 가질 수 있는 값의 범위

관계(RelationShip)의 종류
1. 존재적 관계
 엔터티 간의 연관된 상태를 의미

2. 행위적 관계
 엔터티 간의 어떤 행위가 있는 것을 의미

관계의 구성
1. 관계명
2. 차수(Cardinality)
3. 선택성(Optionality)

관계의 차수(Cardinality)
한 엔터티의 레코드(인스턴스)가 다른 엔터티의 레코드(인스턴스)와 어떻게 연결되는지를 나타내는 표현
주로 1:1, 1:N, 1:M 등으로 표현

1:1 관계
- 완전 1:1 관계
  하나의 엔터티에 관계되는 엔터티가 반드시 하나로 존재하는 경우
- 선택적 1:1 관계
  하나의 엔터티에 관계되는 엔터티가 하나이거나 없을 수 있는 경우

1:N 관계
엔터티에 하난의 행에 다른 엔터티의 값이 여러 개 있는 경우

M:N 관계
두 엔터티가 다:다의 연결 관계 갖고 있음

관계의 페어링
엔터티 안에 인스턴스가 개별적으로 관계를 가지는 것
관계란 페어링의 집합을 의미

차수는 하나의 엔터티와 다른 엔터티 간의 레코드 연결 방식
페어링은 두 엔터티 간의 특정 연결을 설명

식별자란 하나의 엔터티에 구성된 여러 개의 속성 중에 엔터티를 대표할 수 있는 속성을 나타냄

주식별자 특징
1. 유일성 : 주식별자에 의해 모든 인스턴스를 유일하게 구분함(인스턴스를 유일하게 식별하기)
2. 최소성 : 주식별자를 구성하는 속성은 유일성을 만족하는 최소한의 속성으로 구성(속성의 수가 많지 않기)
3. 불변성 : 주식별자가 한번 특정 엔터티에 지정되면 그 식별자의 값은 변하지 않아야 함(가급적 변하지 않기)
4. 존재성 : 주식별자가 지정되면 반드시 값이 존재해야 하며 NULL은 허용 안 됨(값이 꼭 입력되기)

식별자 분류
1) 대표성 여부에 따른 식별자의 종류
주식별자
 - 유일성과 최소성을 만족하면서 엔터티를 대표하는 식별자
 - 엔터티 내에서 각 인스턴스를 유일하게 구분할 수 있는 식별자
 - 타 엔터티와 참조관계를 연결할 수 있는 식별자

보조식별자
 - 엔터티 내에서 각 인스턴스를 구분할 수 있는 구분자지만,
   대표성을 가지지 못해 참조 관계 연결을 할 수 없는 식별자
 - 유일성과 최소성은 만족하지만 대표성을 만족하지 못하는 식별자

2) 생성 여부에 따른 식별자의 종류
내부 식별자
 - 다른 엔터티 참조 없이 엔터티 내부에서 스스로 생성되는 식별자

외부식별자
 - 다른 엔터티와 관계로 인하여 만들어지는 식별자(외래키)

3) 속성 수에 따른 식별자 종류
단일식별자
 - 하나의 속성으로 구성

복합식별자
 - 2개 이상의 속성으로 구성

정규화(DB Normalization)의 개념
 - 하나에 엔터티에 많은 속성을 넣게 되면, 해당 엔터티를 조회할 때마다 많은 양의 데이터가 조회될 것이므로
   최소한의 데이터만을 하나의 엔터티에 넣는 식으로 데이터를 분해하는 과정
 - 데이터의 일관성, 최소한의 데이터 중복, 최대한의 데이터 유연성 위한 과정
 - 데이터의 중복을 제거하고 데이터 모델의 독립성을 확보
 - 데이터 이상현상을 줄이기 위한 데이터베이스 설계 기법
 
이상현상(Abnormality)
 - 정규화를 하지 않아 발생하는 현상(삽입이상, 갱신이상, 삭제이상)

정규화 단계
제 1정규화(1NF)
 - 테이블이 컬럼이 원자성(한 속성이 하나의 값을 갖는 특성)을 갖도록 테이블을 분해하는 단계
 - 하나의 행과 컬럼의 값이 반드시 한 값만 입력되도록 행을 분리하는 단계

제 2정규화(2NF)
 - 제 1정규화를 진행한 테이블에 대해 완전 함수 종속을 만들도록 테이블을 분해
 - 완전 함수 종속이란, 기본키를 구성하는 모든 컬럼의 값이 다른 컬럼을 결정짓는 상태
 - 기본키의 부분 집합이 다른 컬럼과 1:1 대응 관계를 갖지 않는 상태를 의미
 - 즉, PK(Primary Key)가 2개 이상일 때 발생하며 PK의 일부와 종속되는 관계가 있다면 분리한다.

제 3정규화(3NF)
 - 제 2정규화를 진행한 테이블에 대해 이행적 종속을 없애도록 테이블을 분리
 - 이행적 종속성이란 A -> B, B -> C 의 관계가 성립할 때, A -> C 가 성립되는 것
 - (A, B) 와 (B, C)로 분리하는 것이 제 3정규화

트랜잭션이란
 - 하나의 연속적인 업무 단위를 말함

- SELECT, INSERRT, DELETE, UPDATE

NULL이란
DBMS에서 아직 정해지지 않은 값
0과 빈문자열("")과는 다른 개념

NULL의 특징
1. NULL을 포함한 연산 결과는 항상 NULL
2. 집계함수는 NULL을 제외한 연산 결과 리턴

식별자 구분(대체 여부에 따른)
1) 본질 식별자
 - 업무에 의해 만들어지는 식별자(꼭 필요한 식별자)

2) 인조 식별자
 - 인위적으로 만들어지는 식별자(꼭 필요하지 않지만 관리의 편이성 등의 이유로 인위적으로 만들어지는 식별자)

인조식별자의 단점
1. 중복 데이터 발생 가능성 -> 데이터 품질 저하
2. 불필요한 인덱스 생성 -> 저장공간 낭비 및 DML 성능 저하

식별관계 vs 비식별관계
식별자 관계 : 외래키(빌려온 키)가 PK(식별자)의 일부분인가?
비식별자 관계 : 외래키(빌려온 키)가 PK(식별자)의 일부분이 아닌가?

필수적, 선택적 관계와 ERD
 - 두 엔터티의 관계와 서로 필수적일 때 하나의 트랜잭션을 형성
 - 두 엔터티가 서로 독립적 수행이 가능하다면 선택적 관계로 표현

IE 표기법
- 원을 사용하여 필수적 관계와 선택적 관계를 구분
- 필수적 관계에는 원을 그리지 않는다.
- 선택적 관계에는 관계선 끝에 원을 그린다.
- NULL 허용여부를 알 수 없음

Barker 표기법
- 실선과 점선으로 구분
- 필수적 관계는 관계선을 실선으로 표기
- 선택적 관계는 관계선을 점선으로 표기
- 속성 앞에 동그라미가 NULL 허용 속성을 의미
#은 식별자를 의미
*은 일반속성(값이 필수O)
o은 일반속성(값이 필수X)
점선은 선택사항을 의미

대용량 데이터를 조회할 때 파티셔닝을 사용한다.
파티셔닝 : 테이블을 수평으로 조건에 따라 논리적으로 쪼개 성능을 향상시키는 기법
