31. 다음의 계층형 질의에서 리프(LEAF) 노드 여부를 출력하려고 한다. (  )에 올바른 것은?
SELECT LEVEL, LPAD('', 4 * (LEVEL-1)||EMPNO.MGR, ( ) AS ISLEAF
FROM Mytest 
START WITH MGR IS NULL
CONNECT BY PRIOR EMPNO = MGR;
1. CONNECT_BY_ISLEAF
2. CONNECT_BY_ISCYCLE
3. SYS_CONNECT_BY_PATH
4. CONNECT_BY_LEAF
답 : 1번
해설) PRIOR 뒤에 붙은게 기준이 된다.
CONNECT_BY_ISLEAF : 전개 과정에서 해당 데이터가 리프 데이터면1, 아니면 0을 반환
CONNECT_BY_ISCYCLE : 전개 과정에서 자식을 갖는데, 해당 데이터가 조상으로 존재하면 1, 아니면 0을 반환
SYS_CONNECT_BY_PATH : 하위 레벨의 컬럼까지 모두 표시

32. 다음 SQL문을 실행한 결과로 올바른 것은?
MytestA N1[1, 2, 3, 4], V1[A, _, B, C]
MytestB N1[1, 2, 3], V1[A, _, B]
SQL문
SELECT SUM(A.N1)
FROM MytestA A, MytestB B
WHERE A.V1 <> B.V1
답 : 12개
해설) <>은 같지 않다는 의미
CROSS JOIN 결과에서 NULL값을 제외하고 조건을 체크하면
1 A 3 B, 3 B 1 A, 4 C 1 A, 4 C 3 B

33. 다음 중 서브쿼리(SubQuery)에 대한 설명으로 올바르지 않은 것은?
1. 서브쿼리는 SQL문의 INSERT구, FROM구, WHERE구 모두 사용이 가능하다.
2. 서브쿼리는 단일행 서브쿼리와 다중행 서브쿼리로 분리되고 다중행 서브쿼리의 경우 
IN, ANY, EXISTS, ALL과 같은 함수를 사용해야 한다.
3. 메인쿼리에서 서브쿼리 내에 있는 컬럼을 사용할 수 없다.
4. 서브쿼리는 SELECT절, FROM절, WHERE절 등에서 사용 가능하다.
답 : 3번
해설) 서브쿼리 중에서 INLINE VIEW의 컬럼은 메인 쿼리에서도 사용 가능하다.

34. 벗어난 범위

35. 다음 중 SQL문을 가장 잘 설명하고 있는 것은?
MytestA 테이블 EMPLOYEE_ID[A1, A2, A3, A4, A5], 
MANAGER_ID[B1, B2, B3, B4, B5], 
SALARY[400, 8000, 9000, 4000, 5000]
MytestB 테이블 EMPLOYEE_ID[B1, B2, B3, B4, B5], 
MANAGER_ID[C1, C2, C3, C4, C5], 
SALARY[2000, 7000, 10000, 3000, 6000]
SQL문
SELECT A.*
FROM MytestA, MytestB
WHERE A.MANAGER_ID = B.EMPLOYEE_ID
AND B.SALARY >= ANY A.SALARY;
1. 어떤 부하 직원보다도 연봉이 높은 상사
2. 어떤 부하 직원보다도 연봉이 낮은 상사
3. 어떤 상사보다도 연봉이 높은 부하 직원
4. 어떤 상사보다도 연봉이 낮은 부하 직원
답 : 1번
해설) ANY는 다중행 연산자(뒤의 조건중 하나라도 일치하면 TRUE)
A테이블의 매니저 아이디가 B 테이블의 직원 아이디이므로 
=> A가 부하직원, B가 상사라고 볼 수 있다. 그러므로 상단의 
SQL문은 어떤 부하직원보다도 연봉이 높은 상사의 데이터를 조회하는
SQL문이라고 할 수 있다.

36. 다음 중 데이터베이스 관리 언어를 올바르게 매핑한 것은?
1. DML - RENAME
2. TCL - COMMIT
3. DCL - DROP
4. DML - ALTER
답 : 2번
해설)
DDL(Data Definition Language)
CREATE, DROP, ALTER, RENAME
DML(Data Modification Language)
SELECT, INSERT, UPDATE, DELETEEEEEEEEEEEEEE
DCL(Data Control Language)
GRANT, REVOKE
TCL(Transaction Control Language)
COMMIT, ROLLBACK

37. 다음 중 아래의 데이터 모델과 같은 테이블 및 PK 제약조건을 생성하는
DDL문장으로 올바른 것은? (단, DBMS는 Oracle을 기준으로 한다.
테이블명 : T_PRODUCT(기본키 : PRODUCT_ID)
SQL문
PRODUCT_ID VARCHAR2(10) NOT NULL
PRODUCT_NAME VARCHAR2(100) NOT NULL
REGISTER_DATE DATE NOT NULL
REGISTER_NO NUMBER(10) NULL
1. CREATE TABLE T_PRODUCT(
PRODUCT_ID VARCHAR2(10) NOT NULL,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
REGISTER_DATE DATE NOT NULL,
REGISTER_NO NUMBER(10), CONSTRAINT PRODUCT_PK
PRIMARY KEY(PRODUCT_ID));
2. CREATE TABLE T_PRODUCT(
PRODUCT_ID VARCHAR2(10) NOT NULL,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
REGISTER_DATE DATE NOT NULL,
REGISTER_NO NUMBER(10) NULL);
ALTER TABLE T_PRODUCT ADD 
PRIMARY KEY PRODUCT_PK
ON (PROD_ID);
3. CREATE TABLE T_PRODUCT(
PRODUCT_ID VARCHAR2(10),
PRODUCT_NAME VARCHAR2(100),
REGISTER_DATE DATE,
REGISTER_NO NUMBER(10); 
ALTER TABLE T_PRODUCT ADD
CONSTRAINT PRODUCT_PK
PRIMARY KEY(PROD_ID)
4. CREATE TABLE T_PRODUCT(
PRODUCT_ID VARCHAR2(10) NOT NULL,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
REGISTER_DATE DATE NOT NULL,
REGISTER_NO NUMBER(10) NULL, ADD 
CONSTRAINT PRIMARY KEY(PRODUCT_ID));
답 : 1번

38. 테이블 A, B, C가 있다. 다음 중 DELETE FROM A
쿼리를 수행한 후에 테이블 C 테이블에 남아 있는
데이터로 가장 올바른 것은?
A테이블 C[1, 2], D[1, 1]
B테이블 B[3, 4], C[1, 1]
C테이블 A[1, 2], B[3, 4]
CREATE TABLE A
(C INTEGER PRIMARY KEY,
D INTEGER);
CREATE TABLE B
(B INTEGER PRIMARY KEY,
C INTEGER REFERENCES A(C) ON DELETE CASCAED);
CREATE TABLE C
(A INTEGER PRIMARY KEY,
B INTEGER REFERENCES B(B) ON DELETE SET NULL);
1. (1, NULL)과 (2, 2)
2. (1, NULL)과 (2, NULL)
3. (2, 2)
4. (1, 1)
답 : 2번
해설) 참조(ON DELETE CASCADE) = 삭제시 연쇄 삭제하겠다.
A테이블을 삭제하면 A(C)를 참조하는 B테입르도 삭제되므로
B(B)를 참조하는 C(B)는 NULL이 된다.

39. 다음은 테이블 생성 시 사용하는 제약조건(Constraints)에 대한 설명이다.
가장 올바르지 않은 것은?
1. UNIQUE : 컬럼에 중복된 값이 없을 때도 NULL 값은 입력되지 않는다.
2. PRIMARY KEY : 기본키로 테이블당 한 개만 생성이 가능하고 자동으로 인덱스가 생성된다.
3. FOREIGN KEY : 다른 테이블의 기본 키를 참조한다.
4. NOT NULL : 컬럼에 NULL 값을 입력할 수 없도록 한다. 기본키의 경우 
별도로 지정하지 않아도 된다.
답 : 1번
해설) UNIQUE 제약조건은 컬럼에 중복된 값을 허용하진 않지만, NULL값은 포함한다.

40. 다음 중 SQL에서 실행 결과가 같은 것은?
(출력되는 행의 순서는 고려하지 않음)
MytestA 테이블 ID[1,2,3,4,5,6], NAME[A,B,C,D,E,F]
MytestB 테이블 ID[1,3,5,6,7,8], NAME[G,H,I,FJ,K,L]
(1) 
SELECT A.ID, B.ID
FROM MytestA A FULL OUTER JOIN MytestB B
ON A.ID = B.ID
(2)
SELECT A.ID, B.ID
FROM MytestA A LEFT OUTER JOIN MytestB B
ON A.ID = B.ID
UNION
SELECT A.ID, B.ID
FROM MytestA A RIGHT OUTER JOIN MytestB B
ON A.ID = B.ID
(3)
SELECT A.ID, B.ID
FROM MytestA A RIGHT OUTER JOIN MytestB B
WHERE A.ID = B.ID
UNION ALL
SELECT A.ID, NULL
FROM MytestA A WHERE NOT EXISTS(SELECT 1 FROM MytestB B
WHERE A.ID = B.ID)
UNION ALL
SELECT NULL, B.ID
FROM MytestB B WHERE NOT EXISTS(SELECT 1 FROM MytestA A
WHERE B.ID = A.ID)
해설)
1번은 (1 A, 1 G), (2 B, NULL NULL), (3 C, 3 H), (4 D, NULL NULL)
(5 E, 5 I), (6 F, 6 J), (NULL NULL, 7 K), (NULL NULL, 8 L)
2번은 (1 A, 1 G), (2 B, NULL NULL), (3 C, 3 H), (4 D, NULL NULL)
(5 E, 5 I), (6 F, 6 J)과 (1 A, 1 G), (3 C, 3 H), (5 E, 5 I), 
(6 F, 6 J), (NULL NULL, 7 K), (NULL NULL, 8 L)이 합쳐져서 FULL OUTER JOIN과 
연산 결과가 같다.











